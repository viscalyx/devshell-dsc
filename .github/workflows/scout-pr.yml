name: Container security (Docker Scout)

on:
  pull_request:
    branches: [ main ]
    paths:
      - '**/Dockerfile'          # rebuild only when something container‑related changes
      - '.github/workflows/**'

jobs:
  scout:
    runs-on: ubuntu-latest
    permissions:              # required for PR comments + Code‑scanning upload
      contents: read
      pull-requests: write
      security-events: write
      packages: write  # allow pushing to GHCR

    env:
      IMAGE_NAME: ${{ github.repository }}
      TAG: pr-${{ github.event.number }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: |
            network=host

      # Login to GitHub Container Registry for build & scan
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}   # GitHub username
          password: ${{ secrets.GHCR_TOKEN }}      # PAT with packages:write scope

      - name: Build & push PR and baseline images to GHCR
        uses: docker/build-push-action@v5
        env:
          GH_READ_TOKEN: ${{ secrets.GH_READ_TOKEN }}  # provide token for provenance
        with:
          builder: ${{ steps.buildx.outputs.name }}     # use configured Buildx builder
          secrets: ${{ env.GH_READ_TOKEN && format('gh_read_token={0}', env.GH_READ_TOKEN) || '' }}  # inject read token
          context: .
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.TAG }}
            ghcr.io/${{ github.repository }}:latest
          sbom: mode=max              # max-mode SBOM for Scout
          provenance: mode=max        # max-mode provenance for Scout
          push: true                  # push both tags to GHCR

      - name: Scan image with Docker Scout
        id: scout
        uses: docker/scout-action@v1
        with:
          token: ${{ secrets.DOCKERHUB_TOKEN }}    # use Docker Hub token for Scout auth
          username: ${{ secrets.DOCKERHUB_USERNAME }}  # Docker Hub username
          command: cves,compare            # list CVEs and compare to prod baseline
          image: ghcr.io/${{ github.repository }}:${{ env.TAG }}
          organization: ${{ github.repository_owner }}   # namespace for baseline pull
          # --- comparison baseline  ---------------------------------------
          to-latest: true                  # compare against ghcr.io/...:latest
          # --- what should make the step fail -----------------------------
          only-severities: critical,high   # we tolerate ≤ medium
          exit-code: true                  # fail if *any* matching CVE left
          exit-on: vulnerability           # fail if comparison adds new vulnerabilities
          only-fixed: true                 # ignore unfixed issues
          # --- UX helpers --------------------------------------------------
          sarif-file: scout-results.sarif  # upload to Security tab
          write-comment: true              # nice PR comment
          summary: true

      - name: Upload SARIF to GitHub code-scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scout-results.sarif
